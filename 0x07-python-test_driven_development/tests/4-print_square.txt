Testing the 4-print_square module
_________________________________

Import the module
>>> print_square = __import__('4-print_square').print_square

Test for basic int arguments
>>> print_square(2)
##
##
>>> print_square(0)


Test for float size
>>> print_square(3.6)
Traceback (most recent call last):
TypeError: size must be an integer

Test for negative int
>>> print_square(-4)
Traceback (most recent call last):
ValueError: size must be >= 0

Test for negative float
>>> print_square(-6.5)
Traceback (most recent call last):
TypeError: size must be an integer

Test for string as size
>>> print_square("small")
Traceback (most recent call last):
TypeError: size must be an integer

Test for no argument
>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'

Test for NaN
>>> print_square(float('nan'))
Traceback (most recent call last):
TypeError: size must be an integer

Test for infinity
>>> print_square(float('inf'))
Traceback (most recent call last):
TypeError: size must be an integer

Test for None
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

Test for infinity
>>> print_square(float('inf'))
Traceback (most recent call last):
TypeError: size must be an integer

Test for None
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer
